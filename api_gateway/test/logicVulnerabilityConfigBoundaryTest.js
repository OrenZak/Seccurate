const VulnerabilityScanConfigBoundary = require('./../logic/boundaries/vulnerabilityConfigBoundary');

let assert = require('assert');
let dbName = "nameTest";
let loginInfo = {form: {login: "bee", password: "bug", security: "0", form: "submit"}, formAction: "login.php"};
let loginUrl = "http://example/bWAPP/login.php";
let boundary = new VulnerabilityScanConfigBoundary(dbName, 3, loginUrl, loginInfo);
let jsonScanConfig = {
    dbName: dbName,
    scanType: 3,
    loginUrl: loginUrl,
    loginInfo: loginInfo
};

describe('Test deserialize', function () {
    it('Should create ScanConfigBoundary with correct parameters', function () {
        let vulnBoundary = VulnerabilityScanConfigBoundary.deserialize(jsonScanConfig);
        assert.equal(vulnBoundary.dbName, dbName);
        assert.equal(vulnBoundary.scanType, 3);
        assert.equal(vulnBoundary.loginInfo.formAction, loginInfo.formAction);
        assert.equal(vulnBoundary.loginInfo.form.login, loginInfo.form.login);
        assert.equal(vulnBoundary.loginInfo.form.password, loginInfo.form.password);
        assert.equal(vulnBoundary.loginInfo.form.security, loginInfo.form.security);
        assert.equal(vulnBoundary.loginInfo.form.form, loginInfo.form.form);
        assert.equal(vulnBoundary.loginInfo.form.security, loginInfo.form.security);
        assert.equal(vulnBoundary.loginInfo.form.form, loginInfo.form.form);
    });
});

describe('Test serialize', function () {
    it('Should serialzie to {"dbName": "nameTest"","scanType": 3}', function () {
        let serialize = boundary.serialize();
        assert.equal(boundary.dbName, serialize.dbName);
        assert.equal(boundary.scanType, serialize.scanType);
        assert.equal(boundary.loginInfo.formAction, serialize.loginInfo.formAction);
        assert.equal(boundary.loginInfo.form.login, serialize.loginInfo.form.login);
        assert.equal(boundary.loginInfo.form.password, serialize.loginInfo.form.password);
        assert.equal(boundary.loginInfo.form.security, serialize.loginInfo.form.security);
        assert.equal(boundary.loginInfo.form.form, serialize.loginInfo.form.form);
    });
});