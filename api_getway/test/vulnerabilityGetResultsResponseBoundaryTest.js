const VulnerabilityGetResultsResponseBoundary = require('../logic/boundaries/vulnerabilityGetResultsResponseBoundary');

var assert = require('assert');
var json = '{"payload":"payloads","url":"http://google.com","requestB64":"b64","vulnID":1,"name":"rxss","severity":"Critical","description":"issue","recommendations":"fix"}';
var payload = "payloads";
var url = "http://google.com";
var requestB64 = "b64";
var vulnID = 1;
var name = "rxss"
var severity = "Critical";
var description = "issue";
var recommendations = "fix";
var boundary = new VulnerabilityGetResultsResponseBoundary(payload, url, requestB64, vulnID, name, severity, description, recommendations)

describe('Test deserialize', function () {
    it('Should create VulnerabilityGetResultsRequestBoundary with correct parameters', function () {
        var boundaryResult = VulnerabilityGetResultsResponseBoundary.deserialize(json);
        assert.equal(boundaryResult.payload, payload);
        assert.equal(boundaryResult.url, url);
        assert.equal(boundaryResult.requestB64, requestB64);
        assert.equal(boundaryResult.vulnID, vulnID);
        assert.equal(boundaryResult.name, name);
        assert.equal(boundaryResult.severity, severity);
        assert.equal(boundaryResult.description, description);
        assert.equal(boundaryResult.recommendations, recommendations);
    });
});

describe('Test serialize', function () {
    it('Should serialzie to {"payload":"payloads","url":"http://google.com","requestB64":"b64","vulnID":1,"name":"rxss","severity":"Critical","description":"issue","recommendations:"fix"}', function () {
        var serialize = boundary.serialize();
        assert.equal(boundary.payload, JSON.parse(serialize).payload);
        assert.equal(boundary.url, JSON.parse(serialize).url);
        assert.equal(boundary.requestB64, JSON.parse(serialize).requestB64);
        assert.equal(boundary.vulnID, JSON.parse(serialize).vulnID);
        assert.equal(boundary.name, JSON.parse(serialize).name);
        assert.equal(boundary.severity, JSON.parse(serialize).severity);
        assert.equal(boundary.description, JSON.parse(serialize).description);
        assert.equal(boundary.recommendations, JSON.parse(serialize).recommendations);
    });
});